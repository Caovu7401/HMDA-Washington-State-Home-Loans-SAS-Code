/*I. Chia dữ liệu thành các tập train, val*/
%MACRO POP_SPLIT(SAMPLE, SAMPLE1, SAMPLE2, OUR_SAMPRATE, VAR);
	DATA &SAMPLE;
		SET &SAMPLE;
		DROP N;
	RUN;

	DATA &SAMPLE;
		SET &SAMPLE;
		N=_N_;
	RUN;

	PROC SORT DATA=&SAMPLE;
		BY &VAR;
	RUN;

	PROC SURVEYSELECT DATA=&SAMPLE 
		OUT=&SAMPLE1  METHOD=SRS SAMPRATE=&OUR_SAMPRATE SEED=32983;
		STRATA &VAR;
	RUN;

	PROC SORT DATA=&SAMPLE;
		BY N;
	RUN;

	PROC SORT DATA=&SAMPLE1;
		BY N;
	RUN;

	DATA &SAMPLE1;
		SET &SAMPLE1;
		SELECTIONPROB=1;
	RUN;

	DATA MERGED;
		MERGE &SAMPLE &SAMPLE1;
		BY N;
	RUN;

	DATA &SAMPLE2;
		SET MERGED;

		IF SELECTIONPROB=.;
	RUN;

	DATA &SAMPLE1;
		SET &SAMPLE1;
		DROP SELECTIONPROB N;
	RUN;

%MEND;
/*----------------------------------------------------------------------------------*/



/*II.Phân chia biến liên tục thành tối đa 20 khoảng từ low-high*/
%MACRO CONT2(DATA, VAR, NUM);
	PROC DELETE DATA=FINALBIN;
	RUN;

	PROC RANK DATA=&DATA GROUPS=&NUM TIES=LOW OUT=TEMP;
		KEEP &VAR;
		VAR &VAR;
		RANKS GRP_TEMP;
	RUN;

	PROC SUMMARY DATA=TEMP NWAY MISSING;
		CLASS GRP_TEMP;
		VAR &VAR;
		OUTPUT OUT=FINALBIN MIN(&VAR)=LOW MAX(&VAR)=HIGH;
	RUN;

	DATA FINALBIN;
		SET FINALBIN;
		LOW=ROUND(LOW, 0.001);
		HIGH=ROUND(HIGH, 0.001);
	RUN;

	PROC SUMMARY DATA=FINALBIN NWAY MISSING;
		CLASS LOW;
		OUTPUT OUT=FINAL MAX(HIGH)=HIGH;
	RUN;

	PROC SQL NOPRINT;
		SELECT MIN(LOW), MAX(HIGH), COUNT(*) INTO :MIN_LOW, :MAX_HIGH, :N FROM FINAL;
	QUIT;

	DATA FINAL;
		SET FINAL;
		N=_N_;
		LENGTH START $200;
		LENGTH END $200;

		IF HIGH=. THEN
			END='MISSING';
		ELSE
			END=HIGH;

		IF N=&N THEN
			END='HIGH';

		IF LOW=. THEN
			START='MISSING';
		ELSE
			START=LAG(HIGH);

		IF LOW=&MIN_LOW THEN
			START='LOW';
	RUN;

	DATA FINAL;
		SET FINAL;
		LENGTH LABEL $200;

		IF END='MISSING' THEN
			LABEL=". = '[0"!!1!!"] MISSING'";
		ELSE IF END="HIGH" THEN
			LABEL=COMPRESS(START)!!"< - "!!COMPRESS(END);
		ELSE IF START="LOW" THEN
			LABEL=COMPRESS(START)!!" - "!!COMPRESS(END);
		ELSE
			LABEL=COMPRESS(START)!!"< - "!!COMPRESS(END);

		IF START='MISSING' AND END NOT='MISSING' THEN
			LABEL="., LOW - "!!COMPRESS(END);
	RUN;

	DATA FINAL;
		SET FINAL;

		IF _N_ < 10 THEN
			GROUP=COMPRESS("0"!!_N_);
		ELSE
			GROUP=_N_;
		LENGTH PRINT $200;

		IF LOW=. THEN
			PRINT=COMPRESS(LABEL);
		ELSE IF GROUP=&N THEN
			PRINT=COMPRESS(LABEL)!!" = '["!!COMPRESS(GROUP)!!"] "!!COMPRESS(LABEL)!!"';RUN;";
		ELSE
			PRINT=COMPRESS(LABEL)!!" = '["!!COMPRESS(GROUP)!!"] "!!COMPRESS(LABEL)!!"'";
	RUN;

	PROC PRINT DATA=FINAL SPLIT='^' NOOBS;
		VAR PRINT;
		LABEL PRINT="VALUE &VAR.F";
		TITLE1 "PROC FORMAT;";
		TITLE2 "/* &VAR */";
	RUN;

%MEND;
/*----------------------------------------------------------------------------------*/



/*III.Chia nhóm vs tạo label cho các biến liên tục (bổ sung cho CONT2)*/
%MACRO CONT_V1(DATASET, NAME, NUM);
	/*TAO BANG CHI CO BIEN NAME*/
	DATA TMP_CONT_V1;
		SET &DATASET (KEEP=&NAME);
	RUN;

	/*CHIA NHOM*/
	PROC RANK DATA=TMP_CONT_V1 GROUPS=&NUM TIES=LOW OUT=TEMP;
		VAR &NAME;
		RANKS R_&NAME;
	RUN;

	/*SUMMARISE BY BAND*/
	PROC SUMMARY DATA=TEMP NWAY MISSING;
		CLASS R_&NAME;
		VAR &NAME;
		OUTPUT OUT=LABELES MIN(&NAME)=LOW MAX(&NAME)=HIGH;
	RUN;

	DATA LABELES;
		SET LABELES;
		LOW=ROUND(LOW, 0.000000000001);
		HIGH=ROUND(HIGH, 0.000000000001);
	RUN;

	/*SORT IN ORDER TO IDENTIFY FIRST AND LAST CASE*/
	PROC SORT DATA=LABELES;
		BY _TYPE_ R_&NAME;
	RUN;

	DATA LABELES (DROP=INDX_1 LEN_1);
		SET LABELES;
		BY _TYPE_ R_&NAME;
		RETAIN LASTHIGH -9999;
		INDX_1=INDEX(COMPRESS(PUT(LASTHIGH, BEST15.)), '.');
		LEN_1=LENGTH(COMPRESS(PUT(LASTHIGH, BEST15.)));

		IF FIRST._TYPE_ THEN
			DO;
				L=0;
				MAXL=0;
			END;
		ELSE IF LAST._TYPE_ THEN
			DO;

				IF INDX_1 THEN
					L=INDX_1 -1;
				ELSE
					L=LEN_1;
				MAXL=MAX(MAXL, L);
			END;
		ELSE
			DO;

				IF INDX_1 THEN
					L=INDX_1 -1;
				ELSE
					L=LEN_1;
				MAXL=MAX(MAXL, L);
			END;
		LASTHIGH=HIGH;
	RUN;

	PROC SORT DATA=LABELES;
		BY DESCENDING MAXL;
	RUN;

	DATA LABELES;
		SET LABELES;
		RETAIN MAX2 0;
		MAX2=MAX(MAX2, MAXL);
		DIFFL=MAX2 - L;
	RUN;

	PROC SORT DATA=LABELES;
		BY _TYPE_ R_&NAME;
	RUN;

	DATA LABELES (DROP=TMPSTR DIFFL L MAXL MAX2 LH);
		SET LABELES;
		BY _TYPE_ R_&NAME;
		RETAIN LH -9999;
		LENGTH F2_&NAME $80;
		TMPSTR='......................................';

		IF FIRST._TYPE_ THEN
			DO;

				IF DIFFL NE 0 THEN
					F2_&NAME="-9999997< - "!!TRIM(LEFT(PUT(HIGH, 
						BEST15.)))!!""!!"= '"!!SUBSTR(TMPSTR, 1, 
						DIFFL)!!"< - "!!TRIM(LEFT(PUT(HIGH, BEST15.)))!!"'";
				ELSE
					F2_&NAME="-9999997< - "!!TRIM(LEFT(PUT(HIGH, 
						BEST15.)))!!""!!"= ' < - "!!TRIM(LEFT(PUT(HIGH, BEST15.)))!!"'";
			END;
		ELSE IF LAST._TYPE_ THEN
			DO;

				IF DIFFL NE 0 THEN
					F2_&NAME=TRIM(LEFT(PUT(LH, BEST15.)))!!"< - HIGH"!!" = '"!!SUBSTR(TMPSTR, 
						1, DIFFL)!!TRIM(LEFT(PUT(LH, BEST15.)))!!"< - HIGH"!!"'; RUN;";
				ELSE
					F2_&NAME=TRIM(LEFT(PUT(LH, 
						BEST15.)))!!"< - HIGH"!!" = '"!!TRIM(LEFT(PUT(LH, 
						BEST15.)))!!"< - HIGH"!!"'; RUN;";
			END;
		ELSE
			DO;

				IF DIFFL NE 0 THEN
					F2_&NAME=COMPRESS(PUT(LH, BEST15.))!!"< - "!!COMPRESS(PUT(HIGH, 
						BEST15.))!!" "!!"= '"!!SUBSTR(TMPSTR, 1, DIFFL)!!COMPRESS(PUT(LH, 
						BEST15.))!!"< - "!!COMPRESS(PUT(HIGH, BEST15.))!!"'";
				ELSE
					F2_&NAME=COMPRESS(PUT(LH, BEST15.))!!"< - "!!COMPRESS(PUT(HIGH, 
						BEST15.))!!" "!!"= '"!!COMPRESS(PUT(LH, 
						BEST15.))!!"< - "!!COMPRESS(PUT(HIGH, BEST15.))!!"'";
			END;
		LH=HIGH;
	RUN;

	/*PRINT OUT OUTPUT TO ENABLE COPY AND PASTE BACK INTO SAS PROGRAM
	SPLIT DE PRINT LABEL
	NOOBS: KHONG IN COT OBS(OBSERVATION)*/
	PROC PRINT DATA=LABELES SPLIT='^' NOOBS;
		VAR F2_&NAME;
		LABEL F2_&NAME="VALUE &NAME.F";
		TITLE1 "PROC FORMAT;";
		TITLE2 "/* &NAME */";
	RUN;

%MEND;
/*----------------------------------------------------------------------------------*/



/*IV.Tính các chỉ số Good_rate, Bad_rate, WOE, IV cho các biến phân loại*/
%MACRO CHARACT(DATASET, VALUE, FORMAT);
	DATA DATA;
		SET &DATASET(KEEP=GOOD BAD &VALUE);
		LENGTH RANGE $300.;
		RANGE=PUT(&VALUE, &FORMAT);
	RUN;

	PROC SUMMARY DATA=DATA MISSING;
		CLASS RANGE;
		VAR GOOD BAD;
		OUTPUT OUT=TEMP00 (WHERE=(_TYPE_<>0)) SUM=;
	RUN;

	PROC SORT DATA=TEMP00 OUT=TEMP00;
		BY RANGE;
	RUN;

	PROC SQL NOPRINT;
		SELECT SUM(_FREQ_), SUM(GOOD), SUM(BAD), ROUND(SUM(BAD)/SUM(_FREQ_)*100, 
			0.01), SUM(GOOD)/SUM(_FREQ_), ROUND(SUM(GOOD)/SUM(BAD), 0.01) 
			INTO :TOTAL_FREQ, :TOTAL_GOOD, :TOTAL_BAD, :BAD_RATE, :GOOD_RATE, :ODDS FROM 
			TEMP00;
	QUIT;

	DATA TEMP01;
		SET TEMP00;
		PERCENT=ROUND(_FREQ_ / &TOTAL_FREQ*100, 0.01);
		PERCENTGOOD=ROUND(GOOD/&TOTAL_GOOD*100, 0.01);
		PERCENTBAD=ROUND(BAD/&TOTAL_BAD*100, 0.01);
		BAD_RATE=ROUND(BAD/_FREQ_*100, 0.01);
		ODDS=ROUND(GOOD/BAD, 0.01);

		IF ODDS/&ODDS >=1 THEN
			INDEX="G";

		IF ODDS/&ODDS < 1 THEN
			INDEX="B";
		WOE=ROUND(LOG((GOOD/&TOTAL_GOOD)/(BAD/&TOTAL_BAD)), 0.001);

		IF WOE=. THEN
			WOE=ROUND(LOG(((GOOD+0.5)/&TOTAL_GOOD)/((BAD+0.5)/&TOTAL_BAD)), 0.001);
		IV=ROUND((GOOD/&TOTAL_GOOD-BAD/&TOTAL_BAD)*WOE, 0.001);
		DROP _TYPE_;
	RUN;

	PROC SQL NOPRINT;
		SELECT SUM(IV) FORMAT 5.3 INTO :SUM_IV FROM TEMP01;
		INSERT INTO TEMP01 VALUES("TOTAL", &TOTAL_FREQ, &TOTAL_GOOD, &TOTAL_BAD, ., 
			., ., &BAD_RATE, &ODDS, '', ., &SUM_IV);
	QUIT;

	PROC PRINT DATA=TEMP01 NOOBS LABEL;
		VAR RANGE _FREQ_ PERCENT GOOD PERCENTGOOD BAD PERCENTBAD ODDS BAD_RATE INDEX 
			WOE IV;
		TITLE "&VALUE(Fine Classing)";
		LABEL _FREQ_="# G+B" GOOD="Good" PERCENT="Percent" BAD="Bad" RANGE="&VALUE" 
			PERCENTGOOD="% Good" PERCENTBAD="% Bad" BAD_RATE="Bad rate" INDEX="Index" 
			ODDS="G/B Odd" IV="IV";
	RUN;

%MEND;
/*----------------------------------------------------------------------------------*/



/*V.Diều chỉnh và tối ưu để tính WOE cho các biến phân loại*/
%MACRO WOECHARACT1(DATASET, VALUE);
	PROC SUMMARY DATA=&DATASET MISSING;
		/*FORMAT &VALUE &FORMAT;*/
		CLASS &VALUE;
		VAR GOOD BAD;
		OUTPUT OUT=CH_&VALUE SUM=;
	RUN;

	DATA CH_&VALUE;
		/*FORMAT &VALUE &FORMAT;*/
		SET CH_&VALUE;
		RETAIN TOTALGOOD TOTALBAD TOTALODD IV IV_HSBC EFFICIENCY TOTAL TOTAL1 0;

		IF _TYPE_=0 THEN
			DO;
				TOTALGOOD=GOOD;
				TOTALBAD=BAD;
				TOTALODD=ODDS;
				TOTAL=_FREQ_;
				TOTAL1=GOOD+BAD;
				&VALUE="TOTAL";
			END;

		IF _N_>1 THEN
			DO;
				TOTAL1=GOOD+BAD;

				IF TOTALGOOD THEN
					PERCENTGOOD1=GOOD/TOTALGOOD *100;

				IF TOTALBAD THEN
					PERCENTBAD1=BAD/TOTALBAD*100;

				IF TOTALGOOD THEN
					PERCENTGOOD=ROUND(PERCENTGOOD1, 0.001);

				IF TOTALBAD THEN
					PERCENTBAD=ROUND(PERCENTBAD1, 0.001);

				IF TOTAL THEN
					PERCENT=ROUND(_FREQ_/TOTAL*100, 0.001);
				WOE=ROUND(LOG(PERCENTGOOD/PERCENTBAD), 0.001);
			END;
		KEEP &VALUE _FREQ_ TOTAL1 PERCENT GOOD PERCENTGOOD BAD PERCENTBAD ODDS WOE;
	RUN;

	DATA CH_&VALUE;
		LENGTH F&VALUE $ 80;
		SET CH_&VALUE END=LAST_OBS;
		KEEP &VALUE WOE F&VALUE;

		/*A&VALUE=PUT(&VALUE,&FORMAT);*/
		IF LAST_OBS THEN
			F&VALUE="'"!!&VALUE!!"'"!!"="!!WOE!!"; RUN;";
		ELSE
			F&VALUE="'"!!&VALUE!!"'"!!"="!!WOE;

		IF _N_=1 THEN
			DELETE;
	RUN;

	%LET W=W;

	PROC PRINT DATA=CH_&VALUE NOOBS LABEL;
		;
		VAR F&VALUE;
		LABEL F&VALUE="VALUE $&VALUE&W";
		TITLE1 "PROC FORMAT;";
		TITLE2 "/* &VALUE */";
	RUN;

	DATA W_&VALUE;
		SET CH_&VALUE;
	RUN;

%MEND;
/*----------------------------------------------------------------------------------*/



/*VI. Tạo bảng chéo giữa hai biến phân loại và tính tỷ lệ bad_rate dựa trên biến BAD*/
%MACRO CROSS(INPUT_DATASET, VAR1, VAR2);
	PROC TABULATE DATA=&INPUT_DATASET OUT=CROSS_OUTPUT;
		CLASS &VAR1 &VAR2;
		VAR BAD;
		TABLE &VAR1, &VAR2*(BAD*F=BEST12. ALL);
	RUN;

	DATA CROSS_OUTPUT;
		SET CROSS_OUTPUT;
		BAD_RATE=BAD_SUM/N;
	RUN;

	TITLE 'CROSS VARIABLE';

	PROC TABULATE DATA=CROSS_OUTPUT;
		CLASS &VAR1 &VAR2;
		VAR BAD_SUM N BAD_RATE;
		TABLE &VAR1, &VAR2*(BAD_SUM='TOTAL BAD'*SUM=' '*F=BEST12. N='TOTAL'*SUM=' '*F=BEST12. BAD_RATE*SUM=' '*F=PERCENT8.2) 
			/STYLE=[BORDERCOLOR=BLUE];
	RUN;

%MEND;
/*----------------------------------------------------------------------------------*/



/*VII.Vẽ bảng biểu đồ họa*/
%MACRO RUNBOOKP(SCOREFORMAT);
	PROC TEMPLATE;
		DEFINE STYLE STYLES.SUGI32;
			PARENT=STYLES.JOURNAL;
			REPLACE COLORS / 'DOCBG'=CXFF0000 'CONTENTBG'=CXFFFFFF 'CONTENTFG'=GRAY 
				'TITLEFG'=_UNDEF_ 'LINK2'=CX0066AA 'LINK1'=CX004488 'BG5'=CXFFFFFF 
				'BG4'=CXFFFFFF 'FG4'=CX000000 'BG3'=CXFFFFFF 'FG3'=CX000000 
				'BG2'=WHITE /* HEADER AND ROW HEADER CELLS */

			'BGA1'=CXFFFFFF 'FGA1'=#6495ED /* BORDER LINES */

			'FG2'=BIB /* HEADER AND ROW HEADER CELLS */
			'FG'=#000080;

			/* TITLES AND FOOTNOTES */
			/* REDEFINE SOME CHARACTERISTICS OF SOME OF THE STANDARD STYLES. */
			STYLE TABLE FROM TABLE / BORDERWIDTH=1;
			STYLE HEADER FROM HEADER / JUST=CENTER FONT_WEIGHT=BOLD BORDERTOPWIDTH=1 
				BORDERBOTTOMWIDTH=1 BORDERLEFTWIDTH=1 BORDERRIGHTWIDTH=1;
			STYLE ROWHEADER FROM ROWHEADER / FONT_WEIGHT=BOLD;
			STYLE HEADER_R_BORDER FROM HEADER / JUST=CENTER BORDERTOPWIDTH=1 
				BORDERBOTTOMWIDTH=1 BORDERLEFTWIDTH=1 BORDERRIGHTWIDTH=1;
			STYLE HEADER_BOX FROM HEADER / JUST=CENTER BORDERTOPWIDTH=1 
				BORDERBOTTOMWIDTH=1 BORDERLEFTWIDTH=1 BORDERRIGHTWIDTH=1;
			STYLE ROWHEADER_R_BORDER FROM ROWHEADER / BORDERTOPWIDTH=1 
				BORDERBOTTOMWIDTH=1 BORDERLEFTWIDTH=1 BORDERRIGHTWIDTH=1;
			STYLE DATA_Z8 FROM DATA / TAGATTR='FORMAT:00000000';
		END;
	RUN;

	QUIT;

	PROC SORT DATA=&DATASET;
		BY GOOD;
	RUN;

	PROC SUMMARY DATA=&DATASET  MISSING;
		FORMAT SCORE &SCOREFORMAT;
		CLASS SCORE;
		VAR GOOD BAD;
		OUTPUT OUT=SCORE SUM=;
	RUN;

	DATA SCORE;
		SET SCORE;
		NUM=_N_;
	RUN;

	PROC SORT DATA=SCORE;
		BY DESCENDING NUM;
	RUN;

	DATA SCORE;
		SET SCORE;
		RETAIN CUM_TOTAL_DOWN CUM_BADS_DOWN CUM_GOODS_DOWN DIAP 0;

		IF _TYPE_=0 THEN
			DO;
				CUM_TOTAL_DOWN=0;
				CUM_BADS_DOWN=0;
				CUM_GOODS_DOWN=0;
			END;

		IF _TYPE_=1 THEN
			DO;
				CUM_TOTAL_DOWN=CUM_TOTAL_DOWN+_FREQ_;
				CUM_BADS_DOWN=CUM_BADS_DOWN+BAD;
				CUM_GOODS_DOWN=CUM_GOODS_DOWN+GOOD;
			END;

		IF _N_=1 THEN
			DIAP=NUM-1;
		DIAP=DIAP;
		NOSEPG=100/DIAP*(_N_-1);
		NOSEPB=100/DIAP*(_N_-1);
	RUN;

	PROC SORT DATA=SCORE;
		BY NUM;
	RUN;

	DATA SCORE;
		SET SCORE;
		RETAIN CUM_BADS_UP CUM_GOODS_UP CUM_BADS CUM_GOODS 0;

		IF _TYPE_=0 THEN
			DO;
				CUM_BADS_UP=0;
				CUM_GOODS_UP=0;
			END;

		IF _TYPE_=1 THEN
			DO;
				CUM_BADS_UP=CUM_BADS_UP+BAD;
				CUM_GOODS_UP=CUM_GOODS_UP+GOOD;
				CUM_BADS=CUM_BADS_UP;
				CUM_GOODS=CUM_GOODS_UP;
			END;
	RUN;

	DATA SCORE;
		SET SCORE;

		IF _TYPE_=1 THEN
			DO;
				CUM_BADS_UP=CUM_BADS_UP-BAD;
				CUM_GOODS_UP=CUM_GOODS_UP-GOOD;
			END;
	RUN;

	DATA SCORE;
		SET SCORE;
		RETAIN TOT TOTG TOTB BADS_IN_BAND_PCT BADSPCT_IN_BAND_AND_OVER 
			PCTGOODS_IN_BAND_AND_OVER PCTBADS_IN_BAND_AND_OVER PCTGOODS_BELOW_BAND 
			PCTBADS_BELOW_BAND 0;

		IF _TYPE_=0 THEN
			DO;
				TOT=_FREQ_;
				TOTG=GOOD;
				TOTB=BAD;
			END;

		IF _TYPE_=1 THEN
			DO;
				BADS_IN_BAND_PCT=ROUND((BAD/_FREQ_)*100, 0.01);
				GOODS_IN_BAND_PCT=ROUND((GOOD/_FREQ_)*100, 0.01);
				BADSPCT_IN_BAND_AND_OVER=ROUND((CUM_BADS_DOWN/CUM_TOTAL_DOWN)*100, 0.01);
				PCTGOODS_IN_BAND_AND_OVER=ROUND((CUM_GOODS_DOWN/TOTG)*100, 0.01);
				PCTBADS_IN_BAND_AND_OVER=ROUND((CUM_BADS_DOWN/TOTB)*100, 0.01);
				PCTGOODS_BELOW_BAND=ROUND((CUM_GOODS_UP/TOTG)*100, 0.01);
				PCTBADS_BELOW_BAND=ROUND((CUM_BADS_UP/TOTB)*100, 0.01);

				IF BAD>0 THEN
					G_B_ODD=ROUND(GOOD/BAD, 0.01);
				ELSE
					G_B_ODD=GOOD/1;

				IF GOOD>0 THEN
					G_B_ODD=ROUND(GOOD/BAD, 0.01);
				ELSE
					G_B_ODD=1/BAD;
			END;
	RUN;

	/**********GINI**********/
	PROC SUMMARY DATA=&DATASET;
		CLASS SCORE;
		VAR GOOD BAD;
		OUTPUT OUT=GINI2 SUM=;
	RUN;

	DATA GINI2;
		SET GINI2;

		IF _TYPE_=1;
		TOTGOOD+GOOD;
		TOTBAD+BAD;
	RUN;

	DATA GINI2;
		RETAIN MAXGOOD MAXBAD 0;

		IF _N_=1 THEN
			DO;
				LAST=LASTOBS;
				SET GINI2 NOBS=LASTOBS POINT=LAST;
				MAXGOOD=TOTGOOD;
				MAXBAD=TOTBAD;
			END;
		SET GINI2;

		IF _N_>0 THEN
			DO;
				GINIVAL=0.5*((TOTBAD-LAG1(TOTBAD))*(TOTGOOD+LAG1(TOTGOOD)));
				GINIAREA=0.5*(MAXGOOD*MAXBAD);
			END;
		TOTGINIVAL+GINIVAL;
	RUN;

	DATA GINILAST;
		N=LASTOBS;
		SET GINI2 NOBS=LASTOBS POINT=N;
		GINI=ROUND((GINIAREA-TOTGINIVAL)/GINIAREA*100, .01);
		OUTPUT;
		STOP;
	RUN;

	DATA GINI;
		SET GINILAST;
		KEEP GINI;
	RUN;

	/********************K-S******************/
	DATA SCORE;
		SET SCORE;
		DROP CUMB_PCT CUMG_PCT CUMB_MINUS_CUMG KS;
	RUN;

	DATA SCORE;
		SET SCORE;
		RETAIN KS 0;
		LENGTH BN 3 BAND $ 10;
		FORMAT BN 2.;

		IF CUMG_P=. THEN
			CUMG_P=0;

		IF CUMB_P=. THEN
			CUMB_P=0;

		IF _TYPE_=1 THEN
			DO;
				CUMB_PCT=ROUND(CUM_BADS_UP/TOTB*100, 0.01);
				CUMG_PCT=ROUND(CUM_GOODS_UP/TOTG*100, 0.01);
				CUMB_P=ROUND(CUM_BADS/TOTB*100, 0.01);
				CUMG_P=ROUND(CUM_GOODS/TOTG*100, 0.01);
				CUMB_MINUS_CUMG=CUMB_PCT-CUMG_PCT;
				KS=MAX(KS, CUMB_MINUS_CUMG);
				BN=_N_ - 1;
				BN1=PUT(BN, $2.);
				BAND=KSTRCAT("B ", BN1);
			END;
	RUN;

	DATA KS;
		N=LASTOBS;
		SET SCORE NOBS=LASTOBS POINT=N;
		OUTPUT;
		STOP;
		KEEP KS;
	RUN;

	/*************************************/
	ODS LISTING CLOSE;
	ODS TAGSETS.MSOFFICE2K FILE="RUNBOOK.&MODEL.&TYPE..HTML" STYLE=SUGI32;
	TITLE;

	/*ODS HTML BODY="RUNBOOKP &TITLE..HTML" STYLE=SUGI32;*/
	FOOTNOTE "&MODEL";

	PROC PRINT DATA=GINI NOOBS LABEL;
		VAR GINI;
		TITLE 'GINI COEFFICIENT';
	RUN;

	PROC PRINT DATA=KS NOOBS LABEL;
		VAR KS;
		TITLE 'KOLMOGOROV-SMIRNOW CRITERION';
	RUN;

	PROC PRINT DATA=SCORE NOOBS LABEL;
		VAR SCORE _FREQ_ GOOD BAD BADS_IN_BAND_PCT GOODS_IN_BAND_PCT 
			BADSPCT_IN_BAND_AND_OVER PCTGOODS_IN_BAND_AND_OVER PCTBADS_IN_BAND_AND_OVER 
			PCTGOODS_BELOW_BAND PCTBADS_BELOW_BAND G_B_ODD;
		TITLE "RUNBOOK";
		LABEL _FREQ_='TOTAL, #' GOOD='GOOD, #' BAD='BAD, #' 
			BADS_IN_BAND_PCT='BADS% IN BAND' GOODS_IN_BAND_PCT='GOODS% IN BAND' 
			BADSPCT_IN_BAND_AND_OVER='BADS% IN BAND & OVER' 
			PCTGOODS_IN_BAND_AND_OVER='%GOODS IN BAND & OVER' 
			PCTBADS_IN_BAND_AND_OVER='%BADS IN BAND & OVER' 
			PCTGOODS_BELOW_BAND='%GOODS BELOW BAND' 
			PCTBADS_BELOW_BAND='%BADS BELOW BAND' G_B_ODD='GOOD/BAB ODDS';
	RUN;

	PROC FREQ DATA=&DATASET  NOPRINT;
		BY GOOD;
		FORMAT SCORE &SCOREFORMAT;
		TABLE SCORE /OUT=DISTRIBUTION;
	RUN;

	/*
	PROC FREQ DATA=&DATASET  ;
	WHERE GOOD=1;
	FORMAT SCORE &SCOREFORMAT;
	TABLE SCORE /OUT=DISTRIBUTION;
	RUN;*/
	DATA DISTRIBUTION;
		SET DISTRIBUTION;
		BY GOOD;

		IF FIRST.GOOD THEN
			N=0;
		N+1;
		BN1=PUT(N, $2.);
		BAND=KSTRCAT("B ", BN1);
	RUN;

	GOPTIONS RESET=GLOBAL FTITLE=ZAPFB GUNIT=PCT HTITLE=4 HTEXT=2.5 FTEXT=ZAPFB;
	LEGEND1 LABEL=NONE VALUE=("BAD" "GOOD");
	PATTERN1 COLOR=ROSE;
	PATTERN2 COLOR=PAB;
	PATTERN3 COLOR=CYAN;
	LEGEND LABEL=NONE VALUE=("BAD" "GOOD") SHAPE=BAR(3, 3) POSITION=(BOTTOM 
		CENTER) OFFSET=(-3);
	AXIS1 LABEL=NONE VALUE=NONE;
	AXIS2 LABEL=(ANGLE=90 "PERCENT, %") MINOR=(N=2) OFFSET=(0, 0);
	AXIS3 SPLIT="," VALUE=(J=C A=45 H=2) LABEL=NONE;
	TITLE1 " SCORE DISTRIBUTION ";

	PROC GCHART DATA=DISTRIBUTION;
		VBAR3D GOOD / DISCRETE SUMVAR=PERCENT GROUP=BAND SUBGROUP=GOOD OUTSIDE=SUM 
			LEGEND=LEGEND AUTOREF SPACE=0 WIDTH=6 GSPACE=1 MAXIS=AXIS1 RAXIS=AXIS2 
			GAXIS=AXIS3 CFRAME=GRAYAA COUTLINE=BLACK;
		RUN;
	QUIT;

	GOPTIONS RESET=GLOBAL GUNIT=PCT BORDER CBACK=WHITE COLORS=(BLACK BLUE GREEN 
		RED) FTITLE=SWISSB FTEXT=SWISS HTITLE=6 HTEXT=3;
	LEGEND1 LABEL=NONE VALUE=("CUM % GOOD" "CUM % BAD") SHAPE=SYMBOL(4, 2) 
		POSITION=(TOP CENTER INSIDE) MODE=SHARE;
	AXIS1 LABEL=("SCORE BANDS") VALUE=(H=2.8 A=90);
	AXIS2 LABEL=(ANGLE=90 "CUM PERCENT") VALUE=(H=2.8);
	SYMBOL1 VALUE=DOT HEIGHT=1 CV=RED WIDTH=1.5 I=JOIN;
	SYMBOL2 /*FONT=MARKER*/
	VALUE=DOT HEIGHT=0.7 CV=BLUE CI=BLUE CO=BLUE WIDTH=0.7 I=JOIN;
	TITLE 'KS STATISTICS';

	PROC GPLOT DATA=SCORE;
		PLOT CUMG_P*BAND CUMB_P*BAND/OVERLAY LEGEND=LEGEND1 HAXIS=AXIS1 VAXIS=AXIS2 
			CFRAME=GRAYAA;
		RUN;
	QUIT;

	LEGEND1 LABEL=NONE VALUE=("REAL SEPARATION" "NO SEPARATION") SHAPE=SYMBOL(4, 
		2) POSITION=(TOP CENTER INSIDE) MODE=SHARE;
	AXIS1 LABEL=("CUM % BAD");
	AXIS2 LABEL=(ANGLE=90 "CUM % GOOD");
	SYMBOL1 VALUE=DOT HEIGHT=1 CV=RED WIDTH=2.5 I=JOIN;
	SYMBOL2 /*FONT=MARKER*/
	VALUE=DOT HEIGHT=1 CV=BLUE CI=BLUE CO=BLUE WIDTH=2.5 I=JOIN;
	TITLE 'GINI INDEX GRAPH';

	PROC GPLOT DATA=SCORE;
		PLOT CUMG_P*CUMB_P NOSEPG*NOSEPB/OVERLAY LEGEND=LEGEND1 HAXIS=AXIS1 
			VAXIS=AXIS2 CFRAME=GRAYAA;
		RUN;

	DATA SCORE1;
		SET SCORE;
		LENGTH SCORE1 $15;

		IF _N_=1 THEN
			DELETE;

		IF _N_=2 THEN
			SCORE1='B 01';

		IF _N_=3 THEN
			SCORE1='B 02';

		IF _N_=4 THEN
			SCORE1='B 03';

		IF _N_=5 THEN
			SCORE1='B 04';

		IF _N_=6 THEN
			SCORE1='B 05';

		IF _N_=7 THEN
			SCORE1='B 06';

		IF _N_=8 THEN
			SCORE1='B 07';

		IF _N_=9 THEN
			SCORE1='B 08';

		IF _N_=10 THEN
			SCORE1='B 09';

		IF _N_=11 THEN
			SCORE1='B 10';

		IF _N_=12 THEN
			SCORE1='B 11';

		IF _N_=13 THEN
			SCORE1='B 12';

		IF _N_=14 THEN
			SCORE1='B 13';

		IF _N_=15 THEN
			SCORE1='B 14';

		IF _N_=16 THEN
			SCORE1='B 15';

		IF _N_=17 THEN
			SCORE1='B 16';

		IF _N_=18 THEN
			SCORE1='B 17';

		IF _N_=19 THEN
			SCORE1='B 18';

		IF _N_=20 THEN
			SCORE1='B 19';

		IF _N_=21 THEN
			SCORE1='B 20';

		IF _N_=22 THEN
			SCORE1='B 21';

		IF _N_=23 THEN
			SCORE1='B 22';

		IF _N_=24 THEN
			SCORE1='B 23';
	RUN;

	GOPTIONS RESET=GLOBAL GUNIT=PCT BORDER CBACK=WHITE COLORS=(BIB MAGENTA) 
		FTITLE=SWISSB FTEXT=SWISS HTITLE=6 HTEXT=3;
	AXIS1 COLOR=BLACK VALUE=(H=2.5) LABEL=("BAD_RATE");
	AXIS2 COLOR=BLACK VALUE=(H=2.5) LABEL=(ANGLE=0 "G/B ODD ");
	AXIS3 COLOR=BLACK VALUE=(J=C A=90 H=2.5) LABEL=("SCORE BAND");
	SYMBOL1 /*V=SQUARE C=GREEN*/
	VALUE=DOT HEIGHT=2 CV=YELLOW CI=YELLOW WIDTH=2.5 I=JOIN;

	PROC GBARLINE DATA=SCORE1;
		BAR SCORE1 / SUMVAR=BADSPCT_IN_BAND_AND_OVER MAXIS=AXIS3 AXIS=AXIS1 AUTOREF 
			SPACE=1 WIDTH=6 CFRAME=GRAYAA;

		/*ASCENDING*/;
		PLOT /SUMVAR=G_B_ODD AXIS=AXIS2

		/*DESCENDING*/;
		RUN;
	QUIT;

	ODS TAGSETS.MSOFFICE2K CLOSE;
%MEND;

/*Tóm tắt và cập nhật dữ liệu thống kê*/
%MACRO CHARACT_SH(VALUE);
	PROC SUMMARY DATA=&DATASET MISSING;
		CLASS &VALUE;
		OUTPUT OUT=CHAR_&VALUE;
	RUN;

	DATA CHAR_&VALUE;
		SET CHAR_&VALUE;
		RETAIN TOTAL 0;

		IF _TYPE_=0 THEN
			DO;
				TOTAL=_FREQ_;
				&VALUE="TOTAL";
			END;

		IF _N_>1 THEN
			DO;

				IF TOTAL THEN
					PERCENT=ROUND(_FREQ_/TOTAL*100, 0.001);
			END;
		KEEP &VALUE _FREQ_ PERCENT;
	RUN;

	DATA CHAR_&VALUE;
		/*CHI GIU LAI CAC COT &VALUE _FREQ_ PERCENT VA PERIOD*/
		SET CHAR_&VALUE;

		IF &VALUE="TOTAL" THEN
			DELETE;
		PERIOD="&PERIOD";
		KEEP &VALUE _FREQ_ PERCENT PERIOD;
	RUN;

	%IF %SYSFUNC(EXIST(RECENT.CHAR_&VALUE)) %THEN
		%DO;

			DATA RECENT.CHAR_&VALUE;
				SET RECENT.CHAR_&VALUE CHAR_&VALUE;

				/*		MERGE RECENT.CHAR_&VALUE CHAR_&VALUE;*/
				/*		BY &VALUE;*/
			RUN;

		%END;
	%ELSE
		%DO;

			DATA RECENT.CHAR_&VALUE;
				SET CHAR_&VALUE;
			RUN;

		%END;

	DATA PRINT_&VALUE;
		/*TAO FILE PRINT_&VALUE BANG CACH XOA DONG TOTAL TRONG FILE CHAR_&VALUE*/
		SET CHAR_&VALUE;

		IF &VALUE="TOTAL" THEN
			DELETE;
		PERIOD="&PERIOD";
		KEEP &VALUE _FREQ_ PERCENT /*PERIOD*/;
	RUN;

	DATA PRINT_&VALUE (RENAME=(_FREQ_=_FREQ_&PERIOD PERCENT=PERCENT&PERIOD));
		SET PRINT_&VALUE;
	RUN;

	PROC SORT DATA=PRINT_&VALUE;
		BY &VALUE;
		TITLE;
	RUN;

	/*DATA RECENT.PRINT_&VALUE;*/
	/*MERGE RECENT.PRINT_&VALUE PRINT_&VALUE;*/
	/*BY &VALUE;*/
	/*RUN;*/
	
	
	
	
	
	
	
	
	
	%IF %SYSFUNC(EXIST(RECENT.PRINT_&VALUE)) %THEN
		%DO;

			DATA RECENT.PRINT_&VALUE;
				MERGE RECENT.PRINT_&VALUE PRINT_&VALUE;
				BY &VALUE;
			RUN;

		%END;
	%ELSE
		%DO;

			DATA RECENT.PRINT_&VALUE;
				SET PRINT_&VALUE;
			RUN;

		%END;

	DATA RECENT.PRINT_&VALUE;
		SET RECENT.PRINT_&VALUE;

		IF &VALUE='' THEN
			DELETE;
	RUN;

%MEND;
/*----------------------------------------------------------------------------------*/



/*VIII.Hiển thị biểu đồ*/
%MACRO CHARACTPLOT(VALUE);
	PROC PRINT DATA=RECENT.PRINT_&VALUE NOOBS;
	RUN;

	GOPTIONS RESET=GLOBAL GUNIT=PCT BORDER CBACK=WHITE COLORS=(BLACK RED GREEN 
		BLUE) FTITLE=SWISSB FTEXT=ZAPFB HTITLE=5 HTEXT=1.7 OFFSHADOW=(1.5, 1.5);
	AXIS1 LABEL=NONE;
	AXIS2 LABEL=NONE VALUE=NONE ORDER=(0 TO 110 BY 10) MAJOR=NONE MINOR=NONE;
	LEGEND1 CBORDER=BLACK CBLOCK=GRAY LABEL=NONE SHAPE=BAR(3, 3) POSITION=(BOTTOM 
		CENTER);
	PATTERN1 COLOR=VPAPB;
	PATTERN2 COLOR=BIGY;
	PATTERN3 COLOR=PAOY;
	PATTERN4 COLOR=VLIGB;
	PATTERN5 COLOR=LIPK;
	PATTERN6 COLOR=VPAP;
	PATTERN7 COLOR=PAB;
	PATTERN8 COLOR=LIO;

	PROC GCHART DATA=RECENT.CHAR_&VALUE;
		TITLE;
		VBAR PERIOD / SUMVAR=PERCENT SUBGROUP=&VALUE
			INSIDE=SUBPCT WIDTH=9 SPACE=6 MAXIS=AXIS1 RAXIS=AXIS2 LEGEND=LEGEND1 
			CFRAME=BWH COUTLINE=BLACK;
		RUN;
	QUIT;

%MEND;
/*----------------------------------------------------------------------------------*/



/*IX.Tính Score cho mô hình dựa vào biến GOOD*/
%MACRO NRUNBOOKP(DATA, PREDICT, TARGET, FORMAT);

	DATA TEMP00;
		SET &DATA;
		FORMAT TEMP_SCORE 5.3;
		KEEP &TARGET TEMP_SCORE;
		RENAME &PREDICT=SCORE &TARGET=GOOD;
		TEMP_SCORE=ROUND(&PREDICT, 0.001);
	RUN;

	%IF %SYSFUNC(CEXIST(WORK.FORMATS.&FORMAT.FORMAT))=1 %THEN
		%DO;

			PROC SUMMARY DATA=TEMP00  NWAY MISSING;
				FORMAT TEMP_SCORE &FORMAT;
				CLASS TEMP_SCORE;
				VAR GOOD;
				OUTPUT OUT=TEMP02 (DROP=_TYPE_) SUM=;
			RUN;

			DATA TEMP02;
				SET TEMP02;
				GROUP=PUT(TEMP_SCORE, &FORMAT);
				BAD=_FREQ_-GOOD;
			RUN;

		%END;
/*	%ELSE*/
/*		%DO;*/
/**/
/*			PROC RANK DATA=TEMP00	GROUPS=20 TIES=LOW OUT=TEMP01;*/
/*				VAR TEMP_SCORE;*/
/*				RANKS GRP_TEMP;*/
/*			RUN;*/
/**/
/*			PROC SUMMARY DATA=TEMP01 NWAY MISSING;*/
/*				CLASS GRP_TEMP;*/
/*				VAR  GRP_TEMP;*/
/*				OUTPUT OUT=TEMP02 (DROP=_TYPE_ GRP_TEMP)*/
/*					SUM(GOOD)=GOOD;*/
/*			RUN;*/
/**/
/*			DATA TEMP02;*/
/*				SET TEMP02;*/
/*				GROUP=CATS("GROUP", PUT(_N_, Z2.));*/
/*				BAD=_FREQ_-GOOD;*/
/*			RUN;*/
/**/
/*		%END;*/

	PROC SQL NOPRINT;
		SELECT SUM(BAD), SUM(GOOD), SUM(_FREQ_) 
			INTO :TOTALBAD, :TOTALGOOD, :TOTAL 
				FROM TEMP02;
	QUIT;

	DATA TEMP02;
		SET TEMP02;
		RETAIN CUM_BAD CUM_GOOD 0;
		CUM_BAD=CUM_BAD+BAD;
		CUM_GOOD=CUM_GOOD+GOOD;
		BAND=_N_;
		NB_IN_BAND=ROUND(BAD/_FREQ_*100, 0.01);
		NG_IN_BAND=ROUND(GOOD/_FREQ_*100, 0.01);
		PERCENT=ROUND(_FREQ_/&TOTAL*100, 0.01);
		PB_IN_BAND=ROUND(BAD/&TOTALBAD*100, 0.01);
		PG_IN_BAND=ROUND(GOOD/&TOTALGOOD*100, 0.01);

		IF BAD=0 THEN
			GB_ODD=ROUND(GOOD/(BAD+1), 0.01);
		ELSE GB_ODD=ROUND(GOOD/(BAD), 0.01);
		PCUM_BAD=ROUND(CUM_BAD/&TOTALBAD*100, 0.01);
		PCUM_GOOD=ROUND(CUM_GOOD/&TOTALGOOD*100, 0.01);
	RUN;

	/*-----------Add band 0-------------------*/
	DATA TEMP03;
		IF _N_=1 THEN
			DO;
				BAND=0;
				PCUM_BAD=0;
				PCUM_GOOD=0;
				OUTPUT;
			END;

		SET TEMP02 (KEEP=BAND PCUM_BAD PCUM_GOOD);
		OUTPUT;
	RUN;

	/*------------ROC Curve and Gini---------------*/
	ODS EXCLUDE ALL;

	/*--GINI--*/
	PROC FREQ DATA = TEMP00;
		TABLES GOOD*TEMP_SCORE / MEASURES NOPRINT ALPHA=0.05;
		TEST SMDCR;
		SYSECHO "Gini Calculation";
		ODS OUTPUT SOMERSDCR = TEMP_GINI(DROP=TABLE CVALUE1);
	RUN;

	/*--KS--*/
	PROC NPAR1WAY DATA=TEMP00 KS PLOTS=NONE;
		CLASS GOOD;
		VAR TEMP_SCORE;
		SYSECHO "K-S Calculation";
		ODS OUTPUT KS2STATS=TEMP_KS (WHERE=(LABEL1="KS"));
	RUN;

	DATA TEMP_ASSESSMENT;
		SET TEMP_GINI (KEEP=NAME1 NVALUE1) TEMP_KS(KEEP=NAME2 NVALUE2 RENAME=(NAME2=NAME1 NVALUE2=NVALUE1));
		LENGTH VALUE $50.;

		IF NAME1="_SMDCR_" THEN
			VALUE="Gini";

		IF NAME1="_D_" THEN
			VALUE="Kolmogorov-Smirnow";

		IF NAME1="L_SMDCR" THEN
			VALUE="5% CI Gini";

		IF NAME1="U_SMDCR" THEN
			VALUE="95% CI Gini";

		IF NAME1="E_SMDCR" THEN
			DELETE;
	RUN;

	ODS EXCLUDE NONE;

	/*-----------------------REPORT-----------------*/
	/*------------PRINT TABLE--------------*/
	PROC PRINT DATA=TEMP02 NOOBS LABEL;
		VAR GROUP _FREQ_ BAD GOOD NB_IN_BAND NG_IN_BAND PG_IN_BAND PB_IN_BAND PCUM_GOOD PCUM_BAD  GB_ODD;
		TITLE "Decision Table";
		LABEL 	GROUP='BAND' 
			_FREQ_='Total'
			GOOD='Good' BAD='Bad'
			NB_IN_BAND='Bad rate'
			NG_IN_BAND='Good rate'
			PB_IN_BAND='%Bad / TotalBad' 
			PG_IN_BAND='%Good / TotalGood' 
			PCUM_BAD='%Cum Bad / TotalBad' 
			PCUM_GOOD='%Cum Good / TotalGood'
			GB_ODD='Good / Bad';
	RUN;

	PROC PRINT DATA=TEMP_ASSESSMENT NOOBS LABEL;
		VAR VALUE NVALUE1;
		LABEL VALUE="Coefficient" NVALUE1="Value";
		FORMAT NVALUE1 PERCENT10.2;
		TITLE "Model Assessment";
	RUN;

	/*------------ Score distribution--------*/
	PROC SGPLOT DATA=TEMP02;
		VBAR BAND/ RESPONSE=PB_IN_BAND NOOUTLINE  DISCRETEOFFSET=-0.2 BARWIDTH=0.4;
		VBAR BAND/ RESPONSE=PG_IN_BAND NOOUTLINE DISCRETEOFFSET=+0.2 BARWIDTH=0.4;;
		VLINE BAND/ RESPONSE=GB_ODD Y2AXIS LINEATTRS=(COLOR=CX9CBA5F PATTERN=SOLID THICKNESS=2PX)  
			MARKERATTRS=(SYMBOL=CIRCLEFILLED COLOR=CX9CBA5F) MARKERS;
		TITLE "Score Distribution";
		Y2AXIS LABEL="Good/Bad";
		YAXIS LABEL="Percent in Band";
		XAXIS LABEL="Score Band";
		LABEL PB_IN_BAND="Bad in Band" PG_IN_BAND="Good in Band" GB_ODD="G/B in Band";
	RUN;

	/*------------------------KS---------------------*/
	PROC SGPLOT DATA=TEMP03;
		VLINE BAND/ RESPONSE=PCUM_BAD LINEATTRS=( PATTERN=SOLID THICKNESS=2PX);
		VLINE BAND/ RESPONSE=PCUM_GOOD LINEATTRS=( PATTERN=SOLID THICKNESS=2PX);
		TITLE "K-S statistic";
		YAXIS LABEL="Percent in Band";
		XAXIS LABEL="Score Band";
		LABEL PCUM_BAD="Cumulative Bad in Band" PCUM_GOOD="Cumulative Good in Band";
	RUN;

	/*-----------------------GINI---------------------*/
	PROC SGPLOT DATA=TEMP03;
		SERIES X=PCUM_GOOD Y=PCUM_BAD/ legendlabel="Real Separation" LINEATTRS=( PATTERN=SOLID THICKNESS=2PX);
		SERIES X=PCUM_GOOD Y=PCUM_GOOD/ legendlabel="No Separation" LINEATTRS=( PATTERN=SOLID THICKNESS=2PX);
		TITLE "Gini index graph";
		YAXIS LABEL="% Cum Good";
		XAXIS LABEL="% Cum Bad";
	RUN;

	PROC DATASETS LIBRARY=WORK NOPRINT;
		DELETE TEMP:;
	RUN;

%MEND;







